//-------------------------------------------------------------------------------------------------
// *** f8c generated file: DO NOT EDIT! Created: 2025-10-18 13:48:26 ***
//-------------------------------------------------------------------------------------------------
/*

Fix8 is released under the GNU LESSER GENERAL PUBLIC LICENSE Version 3.

Fix8 Open Source FIX Engine.
Copyright (C) 2010-25 David L. Dight <fix@fix8.org>

Fix8 is free software: you can  redistribute it and / or modify  it under the  terms of the
GNU Lesser General  Public License as  published  by the Free  Software Foundation,  either
version 3 of the License, or (at your option) any later version.

Fix8 is distributed in the hope  that it will be useful, but WITHOUT ANY WARRANTY;  without
even the  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

You should  have received a copy of the GNU Lesser General Public  License along with Fix8.
If not, see <http://www.gnu.org/licenses/>.

*******************************************************************************************
*                Special note for Fix8 compiler generated source code                     *
*                                                                                         *
* Binary works  that are the results of compilation of code that is generated by the Fix8 *
* compiler  can be released  without releasing your  source code as  long as your  binary *
* links dynamically  against an  unmodified version of the Fix8 library.  You are however *
* required to leave the copyright text in the generated code.                             *
*                                                                                         *
*******************************************************************************************

BECAUSE THE PROGRAM IS  LICENSED FREE OF  CHARGE, THERE IS NO  WARRANTY FOR THE PROGRAM, TO
THE EXTENT  PERMITTED  BY  APPLICABLE  LAW.  EXCEPT WHEN  OTHERWISE  STATED IN  WRITING THE
COPYRIGHT HOLDERS AND/OR OTHER PARTIES  PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY
KIND,  EITHER EXPRESSED   OR   IMPLIED,  INCLUDING,  BUT   NOT  LIMITED   TO,  THE  IMPLIED
WARRANTIES  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO
THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE,
YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

IN NO EVENT UNLESS REQUIRED  BY APPLICABLE LAW  OR AGREED TO IN  WRITING WILL ANY COPYRIGHT
HOLDER, OR  ANY OTHER PARTY  WHO MAY MODIFY  AND/OR REDISTRIBUTE  THE PROGRAM AS  PERMITTED
ABOVE,  BE  LIABLE  TO  YOU  FOR  DAMAGES,  INCLUDING  ANY  GENERAL, SPECIAL, INCIDENTAL OR
CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT
NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR
THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH
HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

*/

//-------------------------------------------------------------------------------------------------
#include <fix8/f8config.h>
#if defined FIX8_MAGIC_NUM && FIX8_MAGIC_NUM > 16793603L
#error fix8_types.hpp version 1.4.3 is out of date. Please regenerate with f8c.
#endif
//-------------------------------------------------------------------------------------------------
// fix8_types.hpp
//-------------------------------------------------------------------------------------------------
#ifndef FIX8_666978385F74797065732E687070_
#define FIX8_666978385F74797065732E687070_

namespace FIX8 {
namespace binance {

//-------------------------------------------------------------------------------------------------
using BeginString = Field<f8String, 8>;
const f8String BeginString_FIX44("FIX.4.4");
const size_t BeginString_realm_els(1);
//-------------------------------------------------------------------------------------------------
using BodyLength = Field<Length, 9>;
//-------------------------------------------------------------------------------------------------
using CheckSum = Field<f8String, 10>;
//-------------------------------------------------------------------------------------------------
using Currency = Field<f8String, 15>;
//-------------------------------------------------------------------------------------------------
using MsgSeqNum = Field<SeqNum, 34>;
//-------------------------------------------------------------------------------------------------
using MsgType = Field<f8String, 35>;
const f8String MsgType_HEARTBEAT("0");
const f8String MsgType_TEST_REQUEST("1");
const f8String MsgType_REJECT("3");
const f8String MsgType_LOGOUT("5");
const f8String MsgType_LOGON("A");
const f8String MsgType_NEWS("B");
const f8String MsgType_MARKET_DATA_REQUEST("V");
const f8String MsgType_MARKET_DATA_SNAPSHOT("W");
const f8String MsgType_MARKET_DATA_INCREMENTAL_REFRESH("X");
const f8String MsgType_LIMIT_QUERY("XLQ");
const f8String MsgType_LIMIT_RESPONSE("XLR");
const f8String MsgType_MARKET_DATA_REQUEST_REJECT("Y");
const f8String MsgType_INSTRUMENT_LIST_REQUEST("x");
const f8String MsgType_INSTRUMENT_LIST("y");
const size_t MsgType_realm_els(14);
//-------------------------------------------------------------------------------------------------
using RefSeqNum = Field<int, 45>;
//-------------------------------------------------------------------------------------------------
using SenderCompID = Field<f8String, 49>;
//-------------------------------------------------------------------------------------------------
using SendingTime = Field<UTCTimestamp, 52>;
//-------------------------------------------------------------------------------------------------
using Symbol = Field<f8String, 55>;
//-------------------------------------------------------------------------------------------------
using TargetCompID = Field<f8String, 56>;
//-------------------------------------------------------------------------------------------------
using Text = Field<f8String, 58>;
//-------------------------------------------------------------------------------------------------
using TransactTime = Field<UTCTimestamp, 60>;
//-------------------------------------------------------------------------------------------------
using RawDataLength = Field<Length, 95>;
//-------------------------------------------------------------------------------------------------
using RawData = Field<data, 96>;
//-------------------------------------------------------------------------------------------------
using EncryptMethod = Field<int, 98>;
const int EncryptMethod_NONE(0);
const size_t EncryptMethod_realm_els(1);
//-------------------------------------------------------------------------------------------------
using HeartBtInt = Field<int, 108>;
//-------------------------------------------------------------------------------------------------
using TestReqID = Field<f8String, 112>;
//-------------------------------------------------------------------------------------------------
using ResetSeqNumFlag = Field<Boolean, 141>;
const char ResetSeqNumFlag_NO('N');
const char ResetSeqNumFlag_YES('Y');
const size_t ResetSeqNumFlag_realm_els(2);
//-------------------------------------------------------------------------------------------------
using NoRelatedSym = Field<NumInGroup, 146>;
//-------------------------------------------------------------------------------------------------
using Headline = Field<f8String, 148>;
//-------------------------------------------------------------------------------------------------
using MDReqID = Field<f8String, 262>;
//-------------------------------------------------------------------------------------------------
using SubscriptionRequestType = Field<char, 263>;
const char SubscriptionRequestType_Subscribe('1');
const char SubscriptionRequestType_Unsubscribe('2');
const size_t SubscriptionRequestType_realm_els(2);
//-------------------------------------------------------------------------------------------------
using MarketDepth = Field<int, 264>;
//-------------------------------------------------------------------------------------------------
using AggregatedBook = Field<Boolean, 266>;
const char AggregatedBook_BOOK_ENTRIES_TO_BE_AGGREGATED('Y');
const size_t AggregatedBook_realm_els(1);
//-------------------------------------------------------------------------------------------------
using NoMDEntryTypes = Field<NumInGroup, 267>;
//-------------------------------------------------------------------------------------------------
using NoMDEntries = Field<NumInGroup, 268>;
//-------------------------------------------------------------------------------------------------
using MDEntryType = Field<char, 269>;
const char MDEntryType_BID('0');
const char MDEntryType_OFFER('1');
const char MDEntryType_TRADE('2');
const size_t MDEntryType_realm_els(3);
//-------------------------------------------------------------------------------------------------
using MDEntryPx = Field<price, 270>;
//-------------------------------------------------------------------------------------------------
using MDEntrySize = Field<Qty, 271>;
//-------------------------------------------------------------------------------------------------
using MDUpdateAction = Field<char, 279>;
const char MDUpdateAction_NEW('0');
const char MDUpdateAction_CHANGE('1');
const char MDUpdateAction_DELETE('2');
const size_t MDUpdateAction_realm_els(3);
//-------------------------------------------------------------------------------------------------
using MDReqRejReason = Field<char, 281>;
const char MDReqRejReason_DUPLICATE_MDREQID('1');
const char MDReqRejReason_TOO_MANY_SUBSCRIPTIONS('2');
const size_t MDReqRejReason_realm_els(2);
//-------------------------------------------------------------------------------------------------
using InstrumentReqID = Field<f8String, 320>;
//-------------------------------------------------------------------------------------------------
using RefTagID = Field<int, 371>;
//-------------------------------------------------------------------------------------------------
using RefMsgType = Field<f8String, 372>;
//-------------------------------------------------------------------------------------------------
using SessionRejectReason = Field<int, 373>;
const int SessionRejectReason_INVALID_TAG_NUMBER(0);
const int SessionRejectReason_REQUIRED_TAG_MISSING(1);
const int SessionRejectReason_TAG_NOT_DEFINED_FOR_THIS_MESSAGE_TYPE(2);
const int SessionRejectReason_UNDEFINED_TAG(3);
const int SessionRejectReason_VALUE_IS_INCORRECT(5);
const int SessionRejectReason_INCORRECT_DATA_FORMAT_FOR_VALUE(6);
const int SessionRejectReason_SIGNATURE_PROBLEM(8);
const int SessionRejectReason_SENDINGTIME_ACCURACY_PROBLEM(10);
const int SessionRejectReason_TAG_APPEARS_MORE_THAN_ONCE(13);
const int SessionRejectReason_TAG_SPECIFIED_OUT_OF_REQUIRED_ORDER(14);
const int SessionRejectReason_REPEATING_GROUP_FIELDS_OUT_OF_ORDER(15);
const int SessionRejectReason_INCORRECT_NUMINGROUP_COUNT_FOR_REPEATING_GROUP(16);
const int SessionRejectReason_OTHER(99);
const size_t SessionRejectReason_realm_els(13);
//-------------------------------------------------------------------------------------------------
using Username = Field<f8String, 553>;
//-------------------------------------------------------------------------------------------------
using InstrumentListRequestType = Field<int, 559>;
const int InstrumentListRequestType_SINGLE_INSTRUMENT(0);
const int InstrumentListRequestType_ALL_INSTRUMENTS(4);
const size_t InstrumentListRequestType_realm_els(2);
//-------------------------------------------------------------------------------------------------
using MinTradeVol = Field<Qty, 562>;
//-------------------------------------------------------------------------------------------------
using LastFragment = Field<Boolean, 893>;
const char LastFragment_NOT_LAST_MESSAGE('N');
const char LastFragment_LAST_MESSAGE('Y');
const size_t LastFragment_realm_els(2);
//-------------------------------------------------------------------------------------------------
using MinPriceIncrement = Field<price, 969>;
//-------------------------------------------------------------------------------------------------
using TradeID = Field<int, 1003>;
//-------------------------------------------------------------------------------------------------
using MaxTradeVol = Field<Qty, 1140>;
//-------------------------------------------------------------------------------------------------
using AggressorSide = Field<char, 2446>;
const char AggressorSide_BUY('1');
const char AggressorSide_SELL('2');
const size_t AggressorSide_realm_els(2);
//-------------------------------------------------------------------------------------------------
using ReqID = Field<f8String, 6136>;
//-------------------------------------------------------------------------------------------------
using RecvWindow = Field<int, 25000>;
//-------------------------------------------------------------------------------------------------
using NoLimitIndicators = Field<NumInGroup, 25003>;
//-------------------------------------------------------------------------------------------------
using LimitType = Field<char, 25004>;
const char LimitType_MESSAGE_LIMIT('2');
const char LimitType_SUBSCRIPTION_LIMIT('3');
const size_t LimitType_realm_els(2);
//-------------------------------------------------------------------------------------------------
using LimitCount = Field<int, 25005>;
//-------------------------------------------------------------------------------------------------
using LimitMax = Field<int, 25006>;
//-------------------------------------------------------------------------------------------------
using LimitResetInterval = Field<int, 25007>;
//-------------------------------------------------------------------------------------------------
using LimitResetIntervalResolution = Field<char, 25008>;
const char LimitResetIntervalResolution_DAY('d');
const char LimitResetIntervalResolution_HOUR('h');
const char LimitResetIntervalResolution_MINUTE('m');
const char LimitResetIntervalResolution_SECOND('s');
const size_t LimitResetIntervalResolution_realm_els(4);
//-------------------------------------------------------------------------------------------------
using ErrorCode = Field<int, 25016>;
//-------------------------------------------------------------------------------------------------
using MessageHandling = Field<int, 25035>;
const int MessageHandling_UNORDERED(1);
const int MessageHandling_SEQUENTIAL(2);
const size_t MessageHandling_realm_els(2);
//-------------------------------------------------------------------------------------------------
using UUID = Field<f8String, 25037>;
//-------------------------------------------------------------------------------------------------
using MinQtyIncrement = Field<Qty, 25039>;
//-------------------------------------------------------------------------------------------------
using MarketMinTradeVol = Field<Qty, 25040>;
//-------------------------------------------------------------------------------------------------
using MarketMaxTradeVol = Field<Qty, 25041>;
//-------------------------------------------------------------------------------------------------
using MarketMinQtyIncrement = Field<Qty, 25042>;
//-------------------------------------------------------------------------------------------------
using FirstBookUpdateID = Field<int, 25043>;
//-------------------------------------------------------------------------------------------------
using LastBookUpdateID = Field<int, 25044>;
//-------------------------------------------------------------------------------------------------
using fix8_BaseEntry = FieldTable;

} // namespace binance
} // namespace FIX8
#endif // FIX8_666978385F74797065732E687070_
